// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	models "github.com/AlexTerra21/gophermart/internal/app/models"
	mock "github.com/stretchr/testify/mock"
)

// Accrual is an autogenerated mock type for the Accrual type
type Accrual struct {
	mock.Mock
}

// GetAccrual provides a mock function with given fields: order, endpoint
func (_m *Accrual) GetAccrual(order string, endpoint string) (*models.Accrual, error) {
	ret := _m.Called(order, endpoint)

	var r0 *models.Accrual
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*models.Accrual, error)); ok {
		return rf(order, endpoint)
	}
	if rf, ok := ret.Get(0).(func(string, string) *models.Accrual); ok {
		r0 = rf(order, endpoint)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Accrual)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(order, endpoint)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAccrual interface {
	mock.TestingT
	Cleanup(func())
}

// NewAccrual creates a new instance of Accrual. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAccrual(t mockConstructorTestingTNewAccrual) *Accrual {
	mock := &Accrual{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
